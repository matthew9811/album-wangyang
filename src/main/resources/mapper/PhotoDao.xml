<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shengxi.wangyang.mapper.PhotoDao">
    <resultMap id="BaseResultMap" type="com.shengxi.wangyang.entity.Photo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="link" jdbcType="VARCHAR" property="link"/>
        <result column="customerId" jdbcType="INTEGER" property="customerId"/>
        <result column="uploadTime" jdbcType="TIMESTAMP" property="uploadTime"/>
        <result column="area" jdbcType="VARCHAR" property="area"/>
        <result column="filmingTime" jdbcType="DATE" property="filmingTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    photo.id as id, photo.link as link, photo.customer_id as customerId,
    photo.upload_time as uploadTime, photo.area as area, photo.filming_time as filmingTime
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from photo photo
        where photo.id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectPhotoList" resultType="com.shengxi.wangyang.entity.Photo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        photo
        <where>

            <if test="startTime != null and endTime != null">
                filming_time BETWEEN
                <!--DATE_FORMAT(#{startTime}, "%Y-%m-%d") AND DATE_FORMAT(#{endTime}, "%Y-%m-%d")-->
                #{startTime} AND #{endTime}
            </if>
            <if test="openId != null">
                AND customer_id = ( SELECT id FROM customer WHERE openid = #{openId} )
            </if>
        </where>

    </select>
    <select id="selectPhotoFimingTime" resultType="java.util.Date">
        SELECT
	    filming_time
        FROM
	    `photo`
	    GROUP BY
		filming_time
        ORDER BY
	    filming_time ASC
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from photo
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByIdList" parameterType="java.lang.Integer">
        delete from photo
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator="," index="index">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteByAlbumsIdList" parameterType="integer">
        delete from photo
        where id in (select photo_id from album_photo where
        album_id in
        <foreach collection="ids" item="albumId" index="index" separator="," open="(" close=")">
            #{albumId}
        </foreach>)
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.shengxi.wangyang.entity.Photo"
            useGeneratedKeys="true">
    insert into photo (link, customer_id, upload_time,
      area, filming_time)
    values (#{link,jdbcType=VARCHAR}, #{customerId,jdbcType=INTEGER}, #{uploadTime,jdbcType=TIMESTAMP}, 
      #{area,jdbcType=VARCHAR}, #{filmingTime,jdbcType=DATE})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.shengxi.wangyang.entity.Photo"
            useGeneratedKeys="true">
        insert into photo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="link != null">
                link,
            </if>
            <if test="customerId != null">
                customer_id,
            </if>
            <if test="uploadTime != null">
                upload_time,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="filmingTime != null">
                filming_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="link != null">
                #{link,jdbcType=VARCHAR},
            </if>
            <if test="customerId != null">
                #{customerId,jdbcType=INTEGER},
            </if>
            <if test="uploadTime != null">
                #{uploadTime,jdbcType=TIMESTAMP},
            </if>
            <if test="area != null">
                #{area,jdbcType=VARCHAR},
            </if>
            <if test="filmingTime != null">
                #{filmingTime,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <insert id="insertByList" parameterType="com.shengxi.wangyang.entity.Photo" keyColumn="id" useGeneratedKeys="true">
        insert into photo (link, customer_id, upload_time,
        area, filming_time) values
        <foreach collection="list" index="index" item="photo" separator=",">
            (#{photo.link},
            #{photo.customerId}, now(), #{photo.area}, #{photo.filmingTime})
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.shengxi.wangyang.entity.Photo">
        update photo
        <set>
            <if test="link != null">
                link = #{link,jdbcType=VARCHAR},
            </if>
            <if test="customerId != null">
                customer_id = #{customerId,jdbcType=INTEGER},
            </if>
            <if test="uploadTime != null">
                upload_time = #{uploadTime,jdbcType=TIMESTAMP},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=VARCHAR},
            </if>
            <if test="filmingTime != null">
                filming_time = #{filmingTime,jdbcType=DATE},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.shengxi.wangyang.entity.Photo">
    update photo
    set link = #{link,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=INTEGER},
      upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      area = #{area,jdbcType=VARCHAR},
      filming_time = #{filmingTime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>