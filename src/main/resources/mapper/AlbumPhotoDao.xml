<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shengxi.wangyang.mapper.AlbumPhotoDao">
    <resultMap id="BaseResultMap" type="com.shengxi.wangyang.entity.AlbumPhoto">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="photoId" jdbcType="INTEGER" property="photoId"/>
        <result column="albumId" jdbcType="INTEGER" property="albumId"/>
    </resultMap>
    <resultMap id="detailMap" type="com.shengxi.wangyang.entity.AlbumPhoto">
        <id column="a.id" jdbcType="INTEGER" property="id"/>
        <result column="a.album_name" property="albumName"/>
        <collection property="photos" ofType="com.shengxi.wangyang.entity.Photo">
            <result column="ap_p.id" property="id"/>
            <result column="ap_p.area" property="area"/>
            <result property="link" column="ap_p.link"/>
            <result property="filmingTime" column="ap_p.filming_time"/>
            <result property="uploadTime" column="ap_p.upload_time"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    album_photo.id as id, album_photo.photo_id as photoId, album_photo.album_id as albumId
  </sql>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from album_photo
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByAlbumIdList">
        delete from album_photo where album_id in
        <foreach collection="albumIds" index="index" item="albumId" separator="," open="(" close=")">
            #{albumId}
        </foreach>
    </delete>
    <select id="selectAlbumDatailByAlbumId" resultType="com.shengxi.wangyang.entity.Photo">
    SELECT * from photo
    <where>
        id in
        (SELECT photo_id from album_photo WHERE album_id = #{albumId})
        <if test="startTime != null and endTime != null">
            AND filming_time BETWEEN
            #{startTime} AND #{endTime}
        </if>
    </where>
        ORDER BY filming_time ASC
  </select>
    <select id="selectPhotoFimingTime" resultType="java.util.Date">
        SELECT
	    filming_time
        FROM
	    `photo`
	    WHERE
	        customer_id = ( SELECT customer_id FROM album WHERE id = #{albumId} )
	    GROUP BY
		filming_time
        ORDER BY
	    filming_time ASC
    </select>


    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.shengxi.wangyang.entity.AlbumPhoto"
            useGeneratedKeys="true">
        insert into album_photo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="photoId != null">
                photo_id,
            </if>
            <if test="albumId != null">
                album_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="photoId != null">
                #{photoId,jdbcType=INTEGER},
            </if>
            <if test="albumId != null">
                #{albumId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <insert id="replaceAlbumPhoto">
        REPLACE INTO album_photo ( album_id, photo_id ) values
        <foreach collection="photoIds" index="index" item="photoId" separator="," >
            ( #{albumId}, #{photoId})
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.shengxi.wangyang.entity.AlbumPhoto">
        update album_photo
        <set>
            <if test="photoId != null">
                photo_id = #{photoId,jdbcType=INTEGER},
            </if>
            <if test="albumId != null">
                album_id = #{albumId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

</mapper>